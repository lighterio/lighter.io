// AUTOROUTE
call page

  set title:
    ltl - lean template language.

  set content

    script(src="//coffeescript.org/extras/coffee-script.js")
    script:
      window['coffee-script'] = CoffeeScript;
      window.markdown = marked;

    #_HEAD
      ._PANEL
        h1#_LOGO
          svg(viewBox="0 0 120 120" style="width:60px;height:60px;margin:0 8px 0 0;vertical-align:middle")
            path(fill="#fc0" d="M35,15h15l25,45l-25,45h-15c-10,0-20-10-20-20v-50c0-10,10-20,20-20z")
            path(fill="#fff" d="M35,15l25,45l-25,45h25l25-45l-25-45z")
            path(fill="#e60" d="M60,15l25,45l-25,45h25c10,0,20-10,20-20v-50c0-10-10-20-20-20z")
          - ltl
          span <b>l</b>ean <b>t</b>emplate <b>l</b>anguage

    #_BODY
      ._PANEL
        .
          ._BOX6
            ._CODE_TAB Template
            textarea._TEMPLATE(rows=8 cols=40):
              // Experience the joy of ltl!
              html(lang="en")
                head>title \\${pageTitle}
                body#demo
                  h1.big ltl demo
                  p:
                    ltl (pronounced "little") is the lean,
                    clean, fast-rendering template machine.
                    Use it in Node.js or in the browser.
                  -:marked
                    ## Custom Filters?
                    Yes, [ltl](/ltl) supports them.
                  if youUseLtl
                    . Your pages are super fast!
                  else
                    . Use ltl!
                  script:coffee
                    console.log "CoffeeScript can be fun."
                  script
                    console.log("And of course JS works too.")
            textarea._COMPILED(style="display:none")
            textarea._CONTEXT(style="display:none"):
                {"pageTitle": "Welcome to ltl!", "youUseLtl": true}
          ._BOX6
            ._CODE_TAB Output
            textarea._OUTPUT(rows=5 cols=40 disabled)
      br
iptables -A INPUT -i eth0 -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -i eth0 -p tcp --dport 8888 -j ACCEPT
iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8888
